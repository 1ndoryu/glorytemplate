:root {
    /* Tokens de tema (valores por defecto: claro) */
    --bg: #ffffff;
    --text: #111111;
    --muted: #6b6b6b;
    --card-bg: #f8f8f8;
    --card-hover: #e6e6e6;
    --border-color: #e6e6e6;
    --button-bg: transparent;
    --button-text: var(--text);

    --radius: 5px;
    --padding: 20px;
    --ancho: 600px;

    /* Variables antiguas para compatibilidad */
    --fondo: var(--card-bg);
    --borde: 1px var(--border-color) solid;
    --bordeBoton: 1px rgba(31, 31, 31, 0.55) solid;
    --blanco: var(--text);
}

/* Modo oscuro */
html[data-theme='dark'] {
    --bg: #080808;
    --text: #d4d4d4;
    --muted: #a2a2a2;
    --card-bg: #0f0f0f;
    --card-hover: #1a1a1a;
    --border-color: #161616;
    --button-bg: transparent;
    --button-text: var(--text);

    --fondo: var(--card-bg);
    --borde: 1px var(--border-color) solid;
    --bordeBoton: 1px rgba(31, 31, 31, 0.55) solid;
}

@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Source+Sans+3:wght@200..900&display=swap');

html {
    background: var(--bg);
    font-size: 62.5%;
}

main {
    width: 100%;
}

.firefox * {
    scrollbar-width: thin;
    scrollbar-color: #373737 transparent;
}

* {
    -webkit-tap-highlight-color: transparent;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

.bloque {
    display: flex;
    background: var(--fondo);
    border-radius: var(--radius);
    padding: var(--padding);
    border: var(--borde);
    width: var(--ancho);
    max-width: 100%;
    gap: 10px;
}

code {
    background: var(--card-hover);
    padding: 1px 3px;
    margin: 1px;
}

img {
    border-style: none;
    vertical-align: top;
    max-width: 100%;
    height: auto;
}

.flex {
    display: flex;
}

.gap {
    gap: 10px;
}

.gap15 {
    gap: 15px;
}

.gap20 {
    gap: 20px;
}

body.noScroll {
    overflow: hidden;
}

.oculto {
    display: none;
}

.flexRow {
    flex-direction: row;
}

.spaceBetween {
    justify-content: space-between;
}

.alignItemCenter {
    align-items: center;
}

.columna {
    flex-direction: column;
}

.w100 {
    width: 100%;
}

.w50 {
    width: 50%;
}

body,
body p,
textarea {
    font-size: 1.2rem;
    display: block;
    margin-block-start: 0em;
    margin-block-end: 0em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    unicode-bidi: isolate;
    color: var(--text);
    line-height: 1.6;
    font-family: 'Source Sans 3', Arial, Helvetica, sans-serif;
    letter-spacing: 0px;
    font-weight: 400;
    text-decoration: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    text-decoration: none;
    text-wrap: pretty;
}

.firefox *::-webkit-scrollbar {
    width: 4px;
    background: transparent;
}

.firefox *::-webkit-scrollbar-thumb {
    border-radius: 10px;
    border: 2px solid transparent;
    background-clip: padding-box;
}

.firefox .menu-container {
    filter: url(#blur-effect) !important;
    background-color: rgba(9, 9, 9, 0.85);
}

.firefox .panelperfilsupsec {
    background: #070707;
    background-color: rgb(7, 7, 7);
    filter: url(#blur-effect) !important;
    background-color: rgba(9, 9, 9, 0.85);
}

::-webkit-scrollbar {
    width: 4px;
    height: 4px;
    transition: width 0.3s ease, height 0.3s ease;
}
::-webkit-scrollbar-track {
    background: none;
}
::-webkit-scrollbar-thumb {
    background: #555;
    border-radius: 10px;
}

.scroll-visible::-webkit-scrollbar {
    width: 4px;
    height: 4px;
}
.scroll-visible::-webkit-scrollbar-thumb {
    background: unset;
}
.scroll-visible::-webkit-scrollbar-thumb:hover {
    background: #888;
}

.appAndroid p {
    font-size: 1.4rem;
}

.appAndroid button {
    font-size: 1.4rem !important;
}

.appAndroid a {
    font-size: 1.4rem;
}

.appAndroid .JHVSFW a {
    font-size: 1.5rem !important;
}

.appAndroid .ZVJVZA {
    padding-bottom: 0px;
    line-height: 13px;
    padding-top: 5px;
}

.appAndroid .HQLXWD a {
    font-size: 1.2rem;
}
@media (max-width: 640px) {
    ::-webkit-scrollbar {
        width: 0px;
        height: 0px;
        transition: width 0.3s ease, height 0.3s ease;
    }

    .scroll-visible::-webkit-scrollbar {
        width: 0px;
        height: 0px;
    }
}

.appAndroid .infoIA-btn,
.appAndroid span.postTag,
.appAndroid .badge,
.appAndroid .postTagToggle {
    font-size: 1.3rem !important;
}

ul {
    list-style: none;
}

.borde {
    border: var(--borde);
}

textarea {
    /* Adaptar al token de texto del tema */
    color: var(--text);
    border: none;
    padding: 0px;
    margin-bottom: 10px;
    font-size: 1.2rem;
    background: none;
    resize: none;
    width: 100%;
}

.seleccionado {
    filter: brightness(2);
    opacity: 1 !important;
    border: 1px solid #676767;
}

.botonesBloques button {
    width: -webkit-fill-available;
    justify-content: center;
}

button {
    all: unset;
    display: flex;
    margin: 0px;
    /* Usar tokens de tema para que el color se adapte (light/dark) */
    color: var(--button-text);
    background: var(--button-bg);
    font-size: 1.2rem;
    border-radius: 4px;
    cursor: pointer;
    padding: 8px 15px;
    align-items: center;
    height: fit-content;
    gap: 5px;
}

.botonprincipal {
    background: transparent !important;
    color: var(--button-text) !important;
    border: none !important;
}

.preview {
    border: var(--borde);
    border-radius: var(--radius);
    display: flex;
    align-content: center;
    text-align: center;
    padding: var(--padding);
    min-height: 60px;
    cursor: pointer;
    width: 100%;
    place-content: center;
}

.noborde {
    border: unset;
}

body {
    display: flex;
    justify-content: center;
    align-items: flex-start;
}

label {
    /* +1px respecto al valor anterior (1.2rem -> 1.3rem) y en negrita */
    font-size: 1.3rem;
    font-weight: 700;
}

/* En formularios, forzar los labels en bloque para colocar inputs/selects debajo */
.gloryForm .formCampo > label {
    display: block;
    margin-bottom: 6px;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
}

form {
    display: flex;
    flex-direction: column;
}

.heart-animation {
    animation: fade 2s ease forwards;
    color: red;
    font-size: 3rem;
}

.waveform-container {
    cursor: pointer;
}

.modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--fondo);
    border: var(--borde);
    padding: 20px;
    border-radius: var(--radius);
    width: 400px;
    max-width: 90%;
    z-index: 1006;
    font-size: 1.1rem;
    flex-direction: column;
    flex-wrap: nowrap;
    gap: 10px;
    max-height: 82%;
    overflow: auto;
}

.customCheckbox {
    display: flex;
    cursor: pointer;
    padding: 5px;
    user-select: none;
    color: #6b6b6b;
    border: var(--borde);
    border-radius: 5px;
    width: 100%;
    justify-content: center;
}

.customCheckbox input[type='checkbox'] {
    display: none !important;
}

input,
textarea {
    background: unset !important;
    padding: 7px 0px !important;
    border-bottom: var(--borde) !important;
    font-size: 1.2rem !important;
    /* Usar token de tema para el color del texto */
    color: var(--text) !important;
    border-radius: 0px;
    border: none;
    resize: none;
    line-height: 1.5;
    width: 100%;
    margin: 4px 0;
}

/* Estilos para selects: similares a un input (borde inferior) */
select {
    width: 100%;
    border: unset;
    background: unset;
    font-family: 'Source Sans 3';
    padding: 5px;
    padding-left: 0px;
    margin: unset;
    font-size: 1.2rem; /* igual a inputs */
    border-bottom: var(--borde);
    outline: none;
    color: var(--text);
    margin: 4px 0;
}
select:focus {
    outline: none;
}
select option {
    color: var(--text);
    background: var(--bg);
}

/* Toggle estilo switch para checkboxes */
.opcionCheck {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 15px;
    border: var(--borde);
    border-radius: 8px;
}
.opcionCheck > div label {
    color: var(--text);
    font-weight: 700;
    display: block; /* asegurar que el select quede debajo en bloques similares */
}
.opcionCheck .description {
    color: var(--muted);
    font-size: 11px;
    line-height: 14px;
    max-width: 250px;
}

.switch {
    position: relative;
    display: inline-block;
    width: 35px;
    height: 18px;
}
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--card-bg);
    transition: background-color 0.18s ease, border-color 0.18s ease;
    border-radius: 34px;
    border: 1px solid var(--border-color);
}
.slider:before {
    position: absolute;
    content: '';
    height: 16px;
    width: 16px;
    background-color: var(--bg);
    transition: transform 0.18s ease;
    border-radius: 50%;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}
.switch input:checked + .slider {
    background-color: var(--text);
    border-color: var(--text);
}
.switch input:checked + .slider:before {
    transform: translateX(17px);
    background-color: var(--bg);
}
.switch input:focus + .slider,
.switch input:active + .slider {
    box-shadow: none; /* eliminar halo que añade la sensación de grosor */
}

/* Minimal modern checkbox group */
.checkbox-group {
    display: flex;
    flex-direction: column;
}
.checkbox-group label {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 6px 6px 6px 30px; /* espacio para la casilla personalizada */
    border-radius: 8px;
    cursor: pointer;
    position: relative;
    transition: transform 120ms ease;
    color: var(--text);
    background: transparent;
    border: 1px solid transparent;
    font-size: 1.2rem; /* igual que inputs */
    font-weight: 400; /* texto normal */
}
/* eliminar efecto hover visual para los checkboxes del grupo */
.checkbox-group label:hover {
    background: transparent;
}
.checkbox-group input[type='checkbox'] {
    display: none;
}
.checkbox-visual-wrapper {
    position: relative;
}
.checkbox-visual-wrapper::before {
    content: '';
    position: absolute;
    left: -28px;
    top: 50%;
    transform: translateY(-50%);
    width: 14px;
    height: 14px;
    border-radius: 3px;
    border: 1px solid var(--border-color);
    background: transparent; /* sin background */
    display: block;
    box-sizing: border-box;
}
.checkbox-visual-wrapper::after {
    content: '✔';
    position: absolute;
    left: -28px;
    top: 50%;
    transform: translateY(-50%);
    width: 14px;
    height: 14px;
    display: none;
    align-items: center;
    justify-content: center;
    color: var(--text);
    font-size: 10px;
    line-height: 14px;
    text-align: center;
}
/* Mostrar checkmark cuando está marcado */
label input:checked + .checkbox-visual-wrapper::after {
    display: block;
}
label input:checked + .checkbox-visual-wrapper::before {
    /* mantener sin background, solo cambiar color del borde si se desea */
    background: transparent;
    border-color: var(--text);
}

/* También un estilo para customCheckbox (campo individual con clase) para mantener coherencia */
.customCheckbox {
    justify-content: flex-start;
    padding-left: 34px;
    position: relative;
}
.customCheckbox input[type='checkbox'] {
    display: none;
}
.customCheckbox::before {
    content: '';
    position: absolute;
    left: 8px;
    top: 50%;
    transform: translateY(-50%);
    width: 18px;
    height: 18px;
    border-radius: 4px;
    border: 1px solid var(--border-color);
    background: var(--bg);
}
.customCheckbox input:checked + .checkmark + * {
    /* cuando existe span.checkmark seguido del texto */
    /* no-op but keeps specificity placeholder */
}

/* Placeholder adaptativo */
input::placeholder,
textarea::placeholder {
    color: var(--muted);
    opacity: 0.9;
}

input:focus,
textarea:focus {
    outline: none;
}

.preview img {
    max-height: 200px;
    object-fit: cover !important;
    width: 100% !important;
}

.openModal {
    cursor: pointer;
}

.activa {
    opacity: 1 !important;
}

.pestanas button {
    font-size: 1.3rem;
    padding: 0px;
    font-weight: 500;
    opacity: 0.6;
}
.pestanas {
    display: flex;
    align-items: center;
    gap: 20px;
    padding: 10px 18px;
}

.submenus {
    display: none;
    background: #080808;
    padding: 10px 6px;
    border-radius: 5px;
    width: 150px;
    overflow: auto;
    border: var(--borde);
    z-index: 1010;
    position: fixed;
    flex-direction: column;
}

.submenus a {
    font-size: 1.2rem;
    padding: 5px;
    padding-left: 10px;
    cursor: pointer;
    color: white;
    width: -webkit-fill-available;
    width: -moz-available;
}

/* Muestra el menú cuando está activo */
.submenus.activo {
    display: flex;
}

.arrastrando {
    filter: brightness(1.2);
}

.previewsForms.activo {
    display: flex; /* o flex, grid, etc., según necesites */
}

.glory-image-uploader {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.previewImagen {
    border: var(--borde);
    border-radius: var(--radius);
    display: flex;
    align-content: center;
    text-align: center;
    padding: var(--padding);
    min-height: 110px;
    cursor: pointer;
    width: 100%;
    align-items: center;
    justify-content: center;
}

/* Badges list component (Glory) */
.badge-list {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
    align-items: center;
}

.badge-list .badge {
    /* basarse en variables del tema */
    color: var(--muted);
    background: var(--card-bg);
    border-radius: 100px;
    padding: 2px 11px;
    cursor: pointer;
    font-size: 1.2rem; /* 12px equivalente */
    white-space: nowrap;
    transition: opacity 120ms ease, transform 120ms ease, background-color 120ms ease, color 120ms ease;
    opacity: 0.85;
}

.badge-list .badge.activo {
    background: var(--card-bg);
    color: var(--text);
    opacity: 1;
    transform: translateY(-1px);
}

.badge-list .badge.inactivo {
    opacity: 0.45;
}

.badge-list .badge-control {
    font-size: 1.1rem;
    padding: 4px 8px;
    border-radius: 6px;
    border: 1px solid var(--border-color);
    background: transparent;
}

.hljs {
    background: var(--card-bg) !important;
}

pre code.hljs {
    display: block;
    overflow-x: auto;
    padding: 1em;
    font-size: 10px;
}
